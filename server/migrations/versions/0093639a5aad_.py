"""empty message

Revision ID: 0093639a5aad
Revises: aecd036a9a17
Create Date: 2024-01-03 18:37:09.274599

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0093639a5aad'
down_revision = 'aecd036a9a17'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buyers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('reviews_id', sa.Integer(), nullable=True),
    sa.Column('buyer_name', sa.String(), nullable=False),
    sa.Column('buyer_email', sa.String(), nullable=False),
    sa.Column('buyer_username', sa.String(), nullable=False),
    sa.Column('buyer_password', sa.String(), nullable=False),
    sa.Column('buyer_image', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_buyers_order_id_orders')),
    sa.ForeignKeyConstraint(['reviews_id'], ['reviews.id'], name=op.f('fk_buyers_reviews_id_reviews')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_buyers'))
    )
    op.drop_table('buyer')
    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_attributes_product_id_products'), 'products', ['product_id'], ['id'])

    with op.batch_alter_table('business_categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('business_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_business_categories_business_id_businesses'), 'businesses', ['business_id'], ['id'])

    with op.batch_alter_table('inventories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_inventories_product_id_products'), 'products', ['product_id'], ['id'])

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('buyer_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_messages_seller_id_sellers'), 'sellers', ['seller_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_messages_buyer_id_buyers'), 'buyers', ['buyer_id'], ['id'])

    with op.batch_alter_table('order_histories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('buyer_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_order_histories_buyer_id_buyers'), 'buyers', ['buyer_id'], ['id'])

    with op.batch_alter_table('orderitems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('order_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_orderitems_order_id_orders'), 'orders', ['order_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_orderitems_product_id_products'), 'products', ['product_id'], ['id'])

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('buyer_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_orders_status_id_order_statuses'), 'order_statuses', ['status_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_orders_buyer_id_buyers'), 'buyers', ['buyer_id'], ['id'])

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_product_categories_product_id_products'), 'products', ['product_id'], ['id'])

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('business_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_products_seller_id_sellers'), 'sellers', ['seller_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_products_business_id_businesses'), 'businesses', ['business_id'], ['id'])

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('buyer_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_reviews_product_id_products'), 'products', ['product_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_reviews_buyer_id_buyers'), 'buyers', ['buyer_id'], ['id'])

    with op.batch_alter_table('sale_histories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_sale_histories_seller_id_sellers'), 'sellers', ['seller_id'], ['id'])

    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('business_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_sellers_business_id_businesses'), 'businesses', ['business_id'], ['id'])

    with op.batch_alter_table('shopify_infos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_shopify_infos_seller_id_sellers'), 'sellers', ['seller_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shopify_infos', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_shopify_infos_seller_id_sellers'), type_='foreignkey')
        batch_op.drop_column('seller_id')

    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_sellers_business_id_businesses'), type_='foreignkey')
        batch_op.drop_column('business_id')

    with op.batch_alter_table('sale_histories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_sale_histories_seller_id_sellers'), type_='foreignkey')
        batch_op.drop_column('seller_id')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_reviews_buyer_id_buyers'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_reviews_product_id_products'), type_='foreignkey')
        batch_op.drop_column('buyer_id')
        batch_op.drop_column('product_id')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_products_business_id_businesses'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_products_seller_id_sellers'), type_='foreignkey')
        batch_op.drop_column('business_id')
        batch_op.drop_column('seller_id')

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_product_categories_product_id_products'), type_='foreignkey')
        batch_op.drop_column('product_id')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_orders_buyer_id_buyers'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_orders_status_id_order_statuses'), type_='foreignkey')
        batch_op.drop_column('status_id')
        batch_op.drop_column('buyer_id')

    with op.batch_alter_table('orderitems', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_orderitems_product_id_products'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_orderitems_order_id_orders'), type_='foreignkey')
        batch_op.drop_column('product_id')
        batch_op.drop_column('order_id')

    with op.batch_alter_table('order_histories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_order_histories_buyer_id_buyers'), type_='foreignkey')
        batch_op.drop_column('buyer_id')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_messages_buyer_id_buyers'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_messages_seller_id_sellers'), type_='foreignkey')
        batch_op.drop_column('buyer_id')
        batch_op.drop_column('seller_id')

    with op.batch_alter_table('inventories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_inventories_product_id_products'), type_='foreignkey')
        batch_op.drop_column('product_id')

    with op.batch_alter_table('business_categories', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_business_categories_business_id_businesses'), type_='foreignkey')
        batch_op.drop_column('business_id')

    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_attributes_product_id_products'), type_='foreignkey')
        batch_op.drop_column('product_id')

    op.create_table('buyer',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('buyer_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buyer_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buyer_username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buyer_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buyer_image', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_buyer')
    )
    op.drop_table('buyers')
    # ### end Alembic commands ###
