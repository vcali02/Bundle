"""empty message

Revision ID: 228dc87d478b
Revises: b1bdb2b595b1
Create Date: 2024-01-07 18:01:01.205914

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '228dc87d478b'
down_revision = 'b1bdb2b595b1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('business_categories', schema=None) as batch_op:
        batch_op.drop_constraint('fk_business_categories_business_id_businesses', type_='foreignkey')
        batch_op.drop_column('business_id')

    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('fk_businesses_seller_id_sellers'), 'sellers', ['seller_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_businesses_bis_category_id_business_categories'), 'business_categories', ['bis_category_id'], ['id'])
        batch_op.drop_column('product_id')

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.drop_constraint('fk_product_categories_product_id_products', type_='foreignkey')
        batch_op.drop_column('product_id')

    with op.batch_alter_table('sellers', schema=None) as batch_op:
            batch_op.alter_column('seller_img',
                                existing_type=sa.VARCHAR(),
                                type_=sa.LargeBinary(),
                                postgresql_using='seller_img::bytea',  # Cast to bytea
                                existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.alter_column('seller_img',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=True)

    with op.batch_alter_table('product_categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('fk_product_categories_product_id_products', 'products', ['product_id'], ['id'])

    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_businesses_bis_category_id_business_categories'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_businesses_seller_id_sellers'), type_='foreignkey')

    with op.batch_alter_table('business_categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('business_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('fk_business_categories_business_id_businesses', 'businesses', ['business_id'], ['id'])

    # ### end Alembic commands ###
